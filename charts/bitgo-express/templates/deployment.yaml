apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "zapbitgo.fullname" . }}
  labels:
    {{- include "zapbitgo.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "zapbitgo.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      name: {{ include "zapbitgo.fullname" . }}
      annotations:
      {{- range $key, $value := .Values.annotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- if .Values.vault.enabled }}
        vault.security.banzaicloud.io/vault-tls-secret: vault-tls
        vault.security.banzaicloud.io/vault-serviceaccount: {{ template "zapbitgo.serviceAccountName" . }}
        vault.security.banzaicloud.io/vault-role: {{ .Values.vault.role }}
        {{- range $key, $value := .Values.vault.extraAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
      labels:
        {{- include "zapbitgo.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "zapbitgo.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.env }}
          env:
          {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
          {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/v2/ping
              port: http
              {{- if .Values.ssl.enabled }}
              scheme: HTTPS
              {{- else }}
              scheme: HTTP
              {{- end }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: /api/v2/ping
              port: http
              {{- if .Values.ssl.enabled }}
              scheme: HTTPS
              {{- else }}
              scheme: HTTP
              {{- end }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.ssl.enabled }}
          volumeMounts:
            - name: bitgo-ssl-cert
              mountPath: {{ .Values.ssl.path }}
              readOnly: true
          {{- end }}
      {{- if .Values.ssl.enabled }}
      volumes:
        - name: bitgo-ssl-cert
          secret:
            secretName: {{ .Values.ssl.secretName }}
            items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
       {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
